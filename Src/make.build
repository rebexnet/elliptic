<?xml version="1.0" encoding="utf-8" ?>

<project name="crypto" default="help" xmlns="http://tempuri.org/nant-donotuse.xsd">

    <property name="keyfile" readonly="true" unless="${property::exists('keyfile')}" value="c:\data\RebexKey.snk" />
    
    <!-- replace by vswhere once it gets nuget-packaged -->
    <property name="vspath.15" readonly="true" value="c:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\MSBuild\15.0\Bin" />
    <property name="msbuild.15.exe" readonly="true" value="${vspath.15}\MSBuild.exe" />
    <property name="msbuild.3.5.exe" readonly="true" value="c:\Windows\Microsoft.NET\Framework\v3.5\MSBuild.exe" />
    <property name="msbuild.common.params" readonly="true" value="/p:Configuration=Release /verbosity:minimal /nologo /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=${keyfile}" />
    
    <property name="retarget.exe" readonly="true" value="Retarget/bin/Release/net40/retarget.exe" />
    
    <target name="help">
        <echo message="Usage:" />
        <echo message="  nant restore     Restore dependencies and submodules" />
        <echo message="  nant bin         Build packages" />
        <echo message="  nant bin.cf      Build packages for .NET CF" />
        <echo message="  nant clean       Clean build directories" />
    </target>

    <target name="clean">
        <delete>
            <fileset basedir="..">
                <include name="out/**" />
                <include name="Src/*/bin/**" />
                <include name="Src/*/obj/**" />
                <include name="Src/*/tmp/**" />
                <include name="Tmp/**" />
            </fileset>
        </delete>
    </target>

    <target name="bin" depends="restore,bin.retarget,bin.modules,pack-all">
    </target>
    
    <target name="restore">
        <echo message="Restoring packages and dependencies..." />
        
        <exec program="dotnet" commandline="restore Crypto.sln" />
        
        <if test="${not file::exists('../external/bouncyeccf/.git') or not file::exists('../external/Chaos.NaCl/.git')}">
            <exec program="git">
                <arg line="submodule init" />
            </exec>
            <exec program="git">
                <arg line="submodule update --recursive --remote" />
            </exec>
        </if>
    </target>
    
    <target name="pack-all">
        <zip zipfile="../out/RebexEllipticCurvePlugins.zip">
            <fileset basedir="../tmp/Rebex.Castle/lib">
                <include name="**/*.dll" />
                <include name="**/*.xml" />
            </fileset>
            <fileset basedir="../tmp/Rebex.Ed25519/lib">
                <include name="**/*.dll" />
                <include name="**/*.xml" />
            </fileset>
            <fileset basedir="../tmp/Rebex.Curve25519/lib">
                <include name="**/*.dll" />
                <include name="**/*.xml" />
            </fileset>
            <fileset basedir="..">
                <include name="README.*" />
            </fileset>
            <fileset basedir="../src/Rebex.Castle" prefix="licenses/Rebex.Castle">
                <include name="LICENSE" />
            </fileset>
            <fileset basedir="../src/Rebex.Curve25519" prefix="licenses/Rebex.Curve25519">
                <include name="LICENSE" />
            </fileset>
            <fileset basedir="../src/Rebex.Ed25519" prefix="licenses/Rebex.Ed25519">
                <include name="LICENSE" />
            </fileset>
        </zip>
    </target>

    <target name="bin.retarget">
        <echo message="Building retargeting utility..." />
        <exec program="dotnet" workingdir="Retarget" commandline="build -c Release Retarget.csproj" />

        <fail message="retarget.exe not found" if="${not file::exists(retarget.exe)}" />
    </target>
    
    <target name="bin.modules">
        <echo message="Building..." />

        <foreach item="String" in="Castle;Curve25519;Ed25519" delim=";" property="module">
            <exec program="${msbuild.15.exe}" workingdir="Rebex.${module}" commandline="Rebex.${module}.csproj /p:TargetFramework=net20 ${msbuild.common.params}" />
            <exec program="dotnet" workingdir="Rebex.${module}" commandline="build Rebex.${module}.csproj -c Release -f netstandard2.0 /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=${keyfile}" />
            <exec program="dotnet" workingdir="Rebex.${module}" commandline="build Rebex.${module}.csproj -c Release -f netstandard1.5 /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=${keyfile}" />
            <exec program="dotnet" workingdir="Rebex.${module}" commandline="build Rebex.${module}.csproj -c Release -f net40 /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=${keyfile}" />
        
            <copy todir="../tmp/Rebex.${module}/lib">
                <fileset basedir="Rebex.${module}/bin/Release">
                    <include name="**/Rebex.${module}.xml" />
                </fileset>
            </copy>

            <foreach item="String" in="net20;net40;netstandard1.5;netstandard2.0" delim=";" property="platform">
                <exec program="${retarget.exe}" verbose="false" workingdir="Rebex.${module}">
                    <arg value="bin/Release/${platform}/Rebex.${module}.dll" />
                    <arg value="../../tmp/Rebex.${module}/lib/${platform}/Rebex.${module}.dll" />
                    <arg value="current" />
                    <arg value="${keyfile}" />
                </exec>
            </foreach>

            <mkdir dir="../tmp/Rebex.${module}/lib/monoandroid40" />
            <exec program="${retarget.exe}" verbose="false" workingdir="Rebex.${module}">
                <arg value="bin/Release/net40/Rebex.${module}.dll" />
                <arg value="../../tmp/Rebex.${module}/lib/monoandroid40/Rebex.${module}.dll" />
                <arg value="xamarin" />
                <arg value="${keyfile}" />
            </exec>
            <copy file="Rebex.${module}/bin/Release/net40/Rebex.${module}.xml" todir="../tmp/Rebex.${module}/lib/monoandroid40" />

            <copy file="../tmp/Rebex.${module}/lib/monoandroid40/Rebex.${module}.dll" todir="../tmp/Rebex.${module}/lib/xamarinios10" />
            <copy file="Rebex.${module}/bin/Release/net40/Rebex.${module}.xml" todir="../tmp/Rebex.${module}/lib/xamarinios10" />

            <copy file="Rebex.${module}/LICENSE.txt" todir="../tmp/Rebex.${module}" />
                
            <exec program="nuget" workingdir="Rebex.${module}" commandline="pack Rebex.Elliptic.${module}.nuspec -BasePath ../../tmp/Rebex.${module} -OutputDirectory ../../out" />

        </foreach>

    </target>

    <target name="bin.cf">
        <echo message="Building..." />

        <exec program="${msbuild.3.5.exe}" commandline="Crypto.CF.sln ${msbuild.common.params}" />

        <foreach item="String" in="Castle;Curve25519;Ed25519" delim=";" property="module">

            <copy file="Rebex.${module}/bin/Release/net35-cf/Rebex.${module}.xml" todir="../tmp/netcf35" />

            <exec program="${retarget.exe}" verbose="false">
                <arg value="Rebex.${module}/bin/Release/net35-cf/Rebex.${module}.dll" />
                <arg value="../tmp/netcf35/Rebex.${module}.dll" />
                <arg value="current" />
                <arg value="${keyfile}" />
            </exec>

        </foreach>

        <mkdir dir="../out" />

        <zip zipfile="../out/RebexEllipticCurvePluginsCF.zip">
            <fileset basedir="../tmp/">
                <include name="netcf35/*" />
            </fileset>
            <fileset basedir="..">
                <include name="README.*" />
            </fileset>
            <fileset basedir="../src/Rebex.Castle" prefix="licenses/Rebex.Castle">
                <include name="LICENSE" />
            </fileset>
            <fileset basedir="../src/Rebex.Curve25519" prefix="licenses/Rebex.Curve25519">
                <include name="LICENSE" />
            </fileset>
            <fileset basedir="../src/Rebex.Ed25519" prefix="licenses/Rebex.Ed25519">
                <include name="LICENSE" />
            </fileset>
        </zip>

    </target>

</project>
